{
  "_args": [
    [
      "signal-exit@3.0.2",
      "/Users/mint/work/etm/source/ETMWallet"
    ]
  ],
  "_from": "signal-exit@3.0.2",
  "_id": "signal-exit@3.0.2",
  "_inBundle": true,
  "_integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=",
  "_location": "/npm/npmlog/gauge/signal-exit",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "signal-exit@3.0.2",
    "name": "signal-exit",
    "escapedName": "signal-exit",
    "rawSpec": "3.0.2",
    "saveSpec": null,
    "fetchSpec": "3.0.2"
  },
  "_requiredBy": [
    "/npm/npmlog/gauge"
  ],
  "_resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
  "_shasum": "b5fdc08f1287ea1178628e415e25132b73646c6d",
  "_shrinkwrap": null,
  "_spec": "3.0.2",
  "_where": "/Users/mint/work/etm/source/ETMWallet",
  "author": {
    "name": "Ben Coe",
    "email": "ben@npmjs.com"
  },
  "bin": null,
  "bugs": {
    "url": "https://github.com/tapjs/signal-exit/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "when you want to fire an event no matter how a process exits.",
  "devDependencies": {
    "chai": "^3.5.0",
    "coveralls": "^2.11.10",
    "nyc": "^8.1.0",
    "standard": "^7.1.2",
    "standard-version": "^2.3.0",
    "tap": "^8.0.1"
  },
  "files": [
    "index.js",
    "signals.js"
  ],
  "homepage": "https://github.com/tapjs/signal-exit",
  "keywords": [
    "signal",
    "exit"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "signal-exit",
  "optionalDependencies": {},
  "peerDependencies": {},
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tapjs/signal-exit.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "standard",
    "release": "standard-version",
    "test": "tap --timeout=240 ./test/*.js --cov"
  },
  "version": "3.0.2",
  "react-native": {
    "crypto": "react-native-crypto",
    "_stream_transform": "readable-stream/transform",
    "_stream_readable": "readable-stream/readable",
    "_stream_writable": "readable-stream/writable",
    "_stream_duplex": "readable-stream/duplex",
    "_stream_passthrough": "readable-stream/passthrough",
    "stream": "stream-browserify",
    "vm": "vm-browserify"
  },
  "browser": {
    "crypto": "react-native-crypto",
    "_stream_transform": "readable-stream/transform",
    "_stream_readable": "readable-stream/readable",
    "_stream_writable": "readable-stream/writable",
    "_stream_duplex": "readable-stream/duplex",
    "_stream_passthrough": "readable-stream/passthrough",
    "stream": "stream-browserify",
    "vm": "vm-browserify"
  }
}